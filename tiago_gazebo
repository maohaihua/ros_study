  <!--deprecated argument, you should specify the parameters below-->
  <!-- They are described in tiago.urdf.xacro -->
  <arg name="robot"  default="titanium"/>
  <arg name="arm"  default="$(eval {'iron': False}.get(arg('robot'), True))"/>
  <arg name="end_effector"  default="$(eval {'iron': 'false', 'steel': 'pal-gripper', 'titanium': 'pal-hey5'}.get(arg('robot'), 'pal-gripper'))"/>
  <arg name="ft_sensor"  default="$(eval {'titanium': 'schunk-ft'}.get(arg('robot'), 'false'))"/>
  <arg name="laser_model"  default="sick-571"/>
  <arg name="camera_model"  default="orbbec-astra"/>
  <arg name="map"   default="$(env HOME)/.pal/tiago_maps/config"/>
  <arg name="rviz"     default="true"/>
  <arg name="gzclient"     default="true"/>
  <arg name="recording" default="false"/>
  <arg name="extra_gazebo_args" default=""/>
  <arg name="localization"   default="amcl"/>
  <arg name="gzpose"         default="-x 0.78 -y -11.1 -z -0.003 -R 0.0 -P 0.0 -Y 70.0"/>
  <arg name="tuck_arm"  default="true"/>

  <include file="$(find tiago_2dnav_gazebo)/launch/tiago_navigation.launch">
      <arg name="arm" value="$(arg arm)"/>
      <arg name="end_effector" value="$(arg end_effector)"/>
      <arg name="ft_sensor" value="$(arg ft_sensor)"/>
      <arg name="laser_model" value="$(arg laser_model)"/>
      <arg name="camera_model" value="$(arg camera_model)"/>
      <arg name="global_planner" value="global_planner"/>
      <arg name="local_planner"  value="trajectory"/>
      <arg name="localization"   value="$(arg localization)"/>
      <arg name="public_sim"     value="True"/>
      <arg name="gzpose"         value="$(arg gzpose)"/>
      <arg name="tuck_arm"       value="$(arg tuck_arm)"/>
      <arg name="map"            value="$(arg map)"/>
      <arg name="rviz"           value="$(arg rviz)"/>
      <arg name="gzclient"       value="$(arg gzclient)"/>
      <arg name="recording"  value="$(arg recording)"/>
      <arg name="extra_gazebo_args" value="$(arg extra_gazebo_args)"/>
    </include>
  <include file="$(find tiago_laser_sensors)/launch/rgbd_cloud_laser.launch">
    <arg name="cloud" value="/xtion/depth_registered/points"/>
  </include>
  
tiago_navigation.launch:  
    <arg name="namespace" default="/"/>
  <arg name="robot"  default="titanium"/>
  <arg name="arm"  default="$(eval {'iron': False}.get(arg('robot'), True))"/>
  <arg name="end_effector"  default="$(eval {'iron': 'false', 'steel': 'pal-gripper', 'titanium': 'pal-hey5'}.get(arg('robot'), 'pal-gripper'))"/>
  <arg name="ft_sensor"  default="$(eval {'titanium': 'schunk-ft'}.get(arg('robot'), 'false'))"/>
  <arg name="laser_model"  default="sick-571"/>
  <arg name="camera_model"  default="orbbec-astra"/>

  <arg name="world"  default="small_office"/>
  <arg name="gzpose" default="-x 0.0 -y 0.0 -z 0.0 -R 0.0 -P 0.0 -Y 0.0"/>
  <arg name="tuck_arm"  default="true"/>

  <arg name="planner"        default="base"/>
  <arg name="global_planner" default="global_planner"/>
  <arg name="local_planner"  default="pal"/>
  <arg name="localization"   default="amcl"/>
  <arg name="map"            default="$(env HOME)/.pal/tiago_maps/configurations/$(arg world)"/>

  <arg name="rviz"     default="true"/>
  <arg name="gzclient" default="true"/>
  <arg name="recording" default="false"/>
  <arg name="extra_gazebo_args" default=""/>

  <arg name="public_sim"   default="false"/>
  <arg name="advanced_navigation"   default="false"/> <!-- Requires extra software from PAL Robotics-->

  <arg name="sim_sufix" value="_public_sim"     if="$(arg public_sim)"/>
  <arg name="sim_sufix" value=""                unless="$(arg public_sim)"/>

  <env name="PAL_HOST" value="tiago" />

  <node name="update_maps_link" pkg="pal_navigation_sm" type="base_maps_symlink.sh" args="tiago_maps"/>

  <group ns="$(arg namespace)">

    <include file="$(find tiago_gazebo)/launch/tiago_gazebo.launch">
      <arg name="world"      value="$(arg world)"/>
      <arg name="arm" value="$(arg arm)"/>
      <arg name="end_effector" value="$(arg end_effector)"/>
      <arg name="ft_sensor" value="$(arg ft_sensor)"/>
      <arg name="laser_model" value="$(arg laser_model)"/>
      <arg name="camera_model" value="$(arg camera_model)"/>
      <arg name="gzpose"     value="$(arg gzpose)"/>
      <arg name="tuck_arm"   value="$(arg tuck_arm)"/>
      <arg name="gui"        value="$(arg gzclient)"/>
      <arg name="public_sim" value="$(arg public_sim)"/>
      <arg name="recording"  value="$(arg recording)"/>
      <arg name="extra_gazebo_args" value="$(arg extra_gazebo_args)"/>
      <arg if="$(eval local_planner == 'teb')" name="use_dynamic_footprint" value="true"/>
    </include>

tiago_gazebo.launch:
  <arg name="world"  default="empty"/>  <!-- empty, ... (see ../worlds) -->
  <!--deprecated argument, you should specify the parameters below-->
  <!-- They are described in tiago.urdf.xacro -->
  <arg name="robot"  default="titanium"/>
  <arg name="arm"  default="$(eval {'iron': False}.get(arg('robot'), True))"/>
  <arg name="end_effector"  default="$(eval {'iron': 'false', 'steel': 'pal-gripper', 'titanium': 'pal-hey5'}.get(arg('robot'), 'pal-gripper'))"/>
  <arg name="ft_sensor"  default="$(eval {'titanium': 'schunk-ft'}.get(arg('robot'), 'false'))"/>
  <arg name="laser_model"  default="sick-571"/>
  <arg name="camera_model"  default="orbbec-astra"/>
  <arg name="multi" default=""/>
  <arg name="gzpose" default="-x 0.0 -y 0.0 -z 0.0 -R 0.0 -P 0.0 -Y 0.0"/>
  <arg name="gui" default="true"/>
  <arg name="debug" default="false"/>
  <arg name="public_sim" default="false"/>
  <arg name="tuck_arm" default="true"/>
  <arg name="recording" default="false"/>
  <arg name="extra_gazebo_args" default=""/>
  <arg name="use_moveit_camera" default="false"/>
  <arg name="use_dynamic_footprint" default="false"/>

  <env name="LC_NUMERIC" value="C" />

  <!-- start up world -->
  <include file="$(find pal_gazebo_worlds)/launch/pal_gazebo.launch">
    <arg name="world" value="$(arg world)"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="debug" value="$(arg debug)"/>
    <arg name="recording" value="$(arg recording)"/>
    <arg name="extra_gz_model_path" value="$(find tiago_gazebo)/models"/>
    <arg name="extra_gz_resource_path" value="$(find tiago_gazebo)"/>
    <arg name="extra_gazebo_args" value="$(arg extra_gazebo_args)"/>
  </include>

  <!-- spawn robot in simulation -->
  <include file="$(find tiago_gazebo)/launch/tiago_spawn.launch">
    <arg name="arm" value="$(arg arm)"/>
    <arg name="end_effector" value="$(arg end_effector)"/>
    <arg name="ft_sensor" value="$(arg ft_sensor)"/>
    <arg name="laser_model" value="$(arg laser_model)"/>
    <arg name="camera_model" value="$(arg camera_model)"/>
    <arg name="multi" value="$(arg multi)"/>
    <arg name="gzpose" value="$(arg gzpose)"/>
  </include>

  <!-- bring up robot -->
  <include file="$(find tiago_gazebo)/launch/simulation_tiago_bringup.launch">
    <arg name="arm" value="$(arg arm)"/>
    <arg name="end_effector" value="$(arg end_effector)"/>
    <arg name="ft_sensor" value="$(arg ft_sensor)"/>
    <arg name="laser_model" value="$(arg laser_model)"/>
    <arg name="camera_model" value="$(arg camera_model)"/>
    <arg name="public_sim"  value="$(arg public_sim)"/>
    <arg name="use_moveit_camera" value="$(arg use_moveit_camera)"/>
    <arg name="use_dynamic_footprint" value="$(arg use_dynamic_footprint)"/>
  </include>

  <!-- point cloud throttle and filter -->
  <group unless="$(arg public_sim)">
    <include file="$(find pal_pcl_points_throttle_and_filter)/launch/throttle_filtering_points.launch">
      <arg name="cloud"  value="/xtion/depth_registered/points"/>
    </include>
  </group>

  <group if="$(arg tuck_arm)">
      <node name="tuck_arm" pkg="tiago_gazebo" type="tuck_arm.py" output="screen"/>
  </group>
  <node name="image_proc" pkg="image_proc" type="image_proc" ns="xtion/rgb"/>

pal_gazebo_worlds)/launch/pal_gazebo.launch:


tiago_gazebo)/launch/tiago_spawn.launch:
  <arg name="arm"/>
  <arg name="end_effector"/>
  <arg name="ft_sensor"/>
  <arg name="laser_model"/>
  <arg name="camera_model"/>
  <arg name="gzpose" default="-x 0 -y 0 -z 0.0 -R 0.0 -P 0.0 -Y 0.0"/>
  <arg name="multi" default=""/>
  <arg name="model_name" default="tiago"/>
  <arg name="file_suffix" value="$(eval ('no-arm' if not arm else end_effector+ ('' if not ft_sensor else '_'+ft_sensor)))"/>
  <rosparam ns="pal_robot_info" param="type">"tiago"</rosparam>

  <!-- PID gains -->
  <rosparam command="load" file="$(find tiago_controller_configuration_gazebo)/config/pids.yaml"/>

  <rosparam command="load" file="$(find tiago_controller_configuration_gazebo)/config/hardware_gazebo/tiago_pal_hardware_gazebo_$(arg file_suffix).yaml"/>

  <!-- Joystick controller parameters -->
  <!--
  <rosparam file="$(find tiago_gazebo)/config/joy_teleop_sim.yaml" command="load"/>
  -->

  <!-- Robot model -->
  <include file="$(find tiago_description)/robots/upload.launch">
    <arg name="arm" value="$(arg arm)"/>
    <arg name="end_effector" value="$(arg end_effector)"/>
    <arg name="ft_sensor" value="$(arg ft_sensor)"/>
    <arg name="laser_model" value="$(arg laser_model)"/>
    <arg name="camera_model" value="$(arg camera_model)"/>
    <arg name="multi"  value="$(arg multi)"/>
  </include>

  <!-- Spawn robot in Gazebo -->
  <node pkg="gazebo_ros" type="spawn_model" name="spawn_model"
    args="-urdf -param robot_description $(arg gzpose) -model $(arg model_name)" />


tiago_gazebo)/launch/simulation_tiago_bringup.launch:
  <arg name="arm"/>
  <arg name="end_effector"/>
  <arg name="ft_sensor"/>
  <arg name="laser_model"/>
  <arg name="camera_model"/>
  <arg name="public_sim"     default="false"/>
  <arg name="tf_prefix" default=""/>
  <arg name="use_moveit_camera" default="false"/>
  <arg name="use_dynamic_footprint" default="false"/>

  <!-- Joint trajectory and diff drive controllers -->
  <rosparam command="load" file="$(find tiago_controller_configuration_gazebo)/config/mobile_base_controller.yaml"/>
  <include file="$(find tiago_controller_configuration_gazebo)/launch/tiago_controllers.launch">
    <arg name="arm" value="$(arg arm)"/>
    <arg name="end_effector" value="$(arg end_effector)"/>
    <arg name="ft_sensor" value="$(arg ft_sensor)"/>
    <arg name="laser_model" value="$(arg laser_model)"/>
    <arg name="camera_model" value="$(arg camera_model)"/>
    <arg name="use_moveit_camera" value="$(arg use_moveit_camera)"/>
    <arg name="tf_prefix" value="$(arg tf_prefix)"/>
  </include>

  <!-- Robot state publisher -->
  <node pkg="robot_state_publisher" type="state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="50.0"/>
    <param name="tf_prefix" type="string" value="$(arg tf_prefix)"/>
  </node>

  <!-- TF lookup -->
  <node pkg="tf_lookup" type="tf_lookup" name="tf_lookup" output="screen"/>

  <!-- Twist mux -->
  <group if="$(arg public_sim)">
    <include file="$(find tiago_bringup)/launch/twist_mux.launch">
      <arg name="cmd_vel_out" value="mobile_base_controller/cmd_vel" />
    </include>
  </group>
  <group unless="$(arg public_sim)">
    <include file="$(find tiago_bringup)/launch/twist_mux.launch">
      <arg name="cmd_vel_out" value="/twist_mux/cmd_vel" />
    </include>
  </group>

  <!-- Dynamic footprint -->
  <group unless="$(arg public_sim)">
    <include file="$(find tiago_bringup)/launch/dynamic_footprint.launch">
      <arg name="arm" value="$(arg arm)"/>
      <arg name="end_effector" value="$(arg end_effector)"/>
      <arg if="$(arg use_dynamic_footprint)" name="remap_footprint_to" value="/move_base/local_costmap/footprint"/>
    </include>
  </group>

  <!-- Speed limit -->
  <group unless="$(arg public_sim)">
    <include file="$(find speed_limit)/launch/speed_limit.launch">
      <arg name="config"    value="$(find tiago_bringup)/config/speed_limit.yaml"/>
      <arg name="footprint" value="$(find pmb2_description)/urdf/base/footprint.yaml"/>
    </include>
  </group>

  <!-- Joystick controller -->
  <include file="$(find tiago_bringup)/launch/joystick_teleop.launch"/>

  <group unless="$(arg public_sim)">
    <include file="$(find sensor_to_cloud)/launch/sonar_to_cloud.launch"/>
   </group>

  <!-- Republish image_raw to image_rect_color to have the same available topic -->
  <node name="image_raw_to_rect_color_relay" pkg="topic_tools" type="relay" args="xtion/rgb/image_raw xtion/rgb/image_rect_color" />

tiago_controller_configuration_gazebo)/launch/tiago_controllers.launch:

tiago_bringup)/launch/twist_mux.launch:

tiago_bringup)/launch/dynamic_footprint.launch:

