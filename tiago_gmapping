roslaunch tiago_2dnav_gazebo tiago_mapping_public.launch

rosrun key_teleop key_teleop.py

rosservice call /pal_map_manager/save_map "directory: ''"


tiago_mapping_public.launch:
  <!--deprecated argument, you should specify the parameters below-->
  <!-- They are described in tiago.urdf.xacro -->
  <arg name="robot"  default="titanium"/>
  <arg name="arm"  default="$(eval {'iron': False}.get(arg('robot'), True))"/>
  <arg name="end_effector"  default="$(eval {'iron': 'false', 'steel': 'pal-gripper', 'titanium': 'pal-hey5'}.get(arg('robot'), 'pal-gripper'))"/>
  <arg name="ft_sensor"  default="$(eval {'titanium': 'schunk-ft'}.get(arg('robot'), 'false'))"/>
  <arg name="laser_model"  default="sick-571"/>
  <arg name="camera_model"  default="orbbec-astra"/>
  <arg name="world" default="small_office"/>
  <arg name="rviz"     default="true"/>
  <arg name="gzclient" default="true"/>
  <arg name="tuck_arm"  default="true"/>
  <arg name="recording" default="false"/>
  <arg name="extra_gazebo_args" default=""/>
  
  <include file="$(find tiago_2dnav_gazebo)/launch/tiago_mapping.launch">
      <arg name="arm" value="$(arg arm)"/>
      <arg name="end_effector" value="$(arg end_effector)"/>
      <arg name="ft_sensor" value="$(arg ft_sensor)"/>
      <arg name="laser_model" value="$(arg laser_model)"/>
      <arg name="camera_model" value="$(arg camera_model)"/>
      <arg name="global_planner" value="global_planner"/>
      <arg name="local_planner"  value="eband"/>
      <arg name="mapping"        value="gmapping"/>
      <arg name="world"          value="$(arg world)"/>
      <arg name="public_sim"     value="True"/>
      <arg name="rviz"           value="$(arg rviz)"/>
      <arg name="gzclient"       value="$(arg gzclient)"/>
      <arg name="tuck_arm"   value="$(arg tuck_arm)"/>
      <arg name="recording"  value="$(arg recording)"/>
      <arg name="extra_gazebo_args" value="$(arg extra_gazebo_args)"/>
    </include>
    
 tiago_mapping.launch:
   <arg name="namespace" default="/"/>
  <arg name="arm"  default="True"/>
  <arg name="end_effector"  default="pal-hey5"/>
  <arg name="ft_sensor"  default="schunk-ft"/>
  <arg name="laser_model"  default="sick-571"/>
  <arg name="camera_model"  default="orbbec-astra"/>

  <arg name="world"  default="small_office"/>
  <arg name="gzpose" default="-x 0.0 -y 0.0 -z 0.0 -R 0.0 -P 0.0 -Y 0.0"/>
  <arg name="tuck_arm"  default="true"/>

  <arg name="planner"        default="base"/>
  <arg name="global_planner" default="global_planner"/>
  <arg name="local_planner"  default="pal"/>
  <arg name="mapping"        default="karto"/>

  <arg name="rviz"     default="true"/>
  <arg name="gzclient" default="true"/>
  <arg name="recording" default="false"/>
  <arg name="extra_gazebo_args" default=""/>

  <arg name="rgbd_sensors"   default="false"/>
  <arg name="public_sim"   default="false"/>

  <arg name="sim_sufix" value="_public_sim"     if="$(arg public_sim)"/>
  <arg name="sim_sufix" value=""                unless="$(arg public_sim)"/>

  <env name="PAL_HOST" value="tiago" />

  <group ns="$(arg namespace)">
  
      <include file="$(find tiago_2dnav)/launch/navigation.launch">
      <arg name="state"          value="mapping"/>
      <arg name="mapping"        value="$(arg mapping)"/>
      <arg name="planner"        value="$(arg planner)"/>
      <arg name="global_planner" value="$(arg global_planner)"/>
      <arg name="local_planner"  value="$(arg local_planner)"/>
      <arg name="public_sim"     value="$(arg public_sim)"/>
      <arg name="rgbd_sensors"   value="$(arg rgbd_sensors)"/>
    </include>

    <node name="rviz" pkg="rviz" type="rviz" if="$(arg rviz)"
          args="-d $(find tiago_2dnav)/config/rviz/navigation$(arg sim_sufix).rviz"/>
  </group>

  <group if="$(arg public_sim)">
    <node name="relay_map" pkg="topic_tools" type="relay" args="/map /vo_map"/>
  </group>
  
  navigation.launch:
    <arg name="state" default="localization"/>

  <arg name="planner"        default="base"/>
  <arg name="global_planner" default="global_planner"/>
  <arg name="local_planner"  default="pal"/>
  <arg name="localization"   default="amcl"/>
  <arg name="mapping"        default="karto"/>
  <arg name="octomap"        default="false"/>
  <arg name="disable_vo"     default="false"/>
  <arg name="public_sim"     default="false"/>
  <arg name="rgbd_sensors"   default="false"/>
  <arg name="tf_prefix"      default=""/>
  <arg name="multiple"       default="false"/>

  <arg name="map" default="$(env HOME)/.pal/tiago_maps/config"/>

  <!-- Localization or Mapping state -->
  <node pkg="pal_navigation_sm" type="navigation.sh" name="navigation"
        args="tiago $(arg state) $(arg localization) $(arg mapping) $(arg map) $(arg octomap) $(arg multiple) $(arg tf_prefix)" output="screen"/>

  <!-- Navigation State Machine -->
  <include file="$(find tiago_2dnav)/launch/state_machine.launch">
    <arg name="state" value="$(arg state)"/>
    <arg name="public_sim" value="$(arg public_sim)"/>
    <arg if="$(arg multiple)" name="map_frame" value="/$(arg tf_prefix)/map"/>
    <arg if="$(arg multiple)" name="base_frame" value="/$(arg tf_prefix)/base_footprint"/>
  </include>

  <!-- Planning -->
  <include file="$(find tiago_2dnav)/launch/move_$(arg planner).launch">
    <arg name="global_planner" value="$(arg global_planner)"/>
    <arg name="local_planner"  value="$(arg local_planner)"/>
    <arg name="public_sim"     value="$(arg public_sim)"/>
    <arg name="rgbd_sensors"   value="$(arg rgbd_sensors)"/>
    <arg name="tf_prefix"      value="$(arg tf_prefix)"/>
    <arg name="multiple"       value="$(arg multiple)"/>
  </include>

  <!-- VO map server -->
  <group unless="$(arg public_sim)">
    <include file="$(find pal_vo_server)/launch/vo_server.launch"/>
  </group>

navigation.sh:
# Run localization/mapping
roslaunch ${ROBOT}_2dnav $STATE.launch localization:=$LOCALIZATION mapping:=$MAPPING map:=$MAP multiple:=$MULTI tf_prefix:=$TF_PREFIX

mapping.launch:
  <arg name="mapping" default="karto"/>
  <arg name="localization" default=""/>
  <arg name="map"          default=""/>

  <env name="PAL_HOST" value="tiago" />

  <!-- SLAM -->
  <include file="$(find tiago_2dnav)/launch/mapping_$(arg mapping).launch"/>
 
mapping_gmapping.launch: 
   <arg name="scan" default="scan"/>

  <node pkg="gmapping" type="slam_gmapping" name="slam_gmapping" output="screen">
    <remap from="scan" to="$(arg scan)"/>
    <rosparam file="$(find tiago_2dnav)/config/mapping/gmapping.yaml" command="load"/>
  </node>
 
state_machine.launch:
  <arg name="state"  default="localization"/>

  <arg name="public_sim"   default="false"/>

  <arg name="sim_sufix" value="_public_sim"     if="$(arg public_sim)"/>
  <arg name="sim_sufix" value=""                unless="$(arg public_sim)"/>

  <arg name="config" default="$(find tiago_2dnav)/config/state_machine/state_machine$(arg sim_sufix).yaml"/>

  <arg name="base_frame" default="/base_footprint"/>
  <arg name="map_frame"  default="/map"/>

  <include file="$(find pal_navigation_sm)/launch/pal_navigation_sm.launch">
    <arg name="state"  value="$(arg state)"/>
    <arg name="config" value="$(arg config)"/>
    <arg name="base_frame" value="$(arg base_frame)"/>
    <arg name="map_frame"  value="$(arg map_frame)"/>
  </include>
  
 pal_navigation_sm.launch:
   <arg name="state"  default="localization"/> <!-- localization, mapping -->
  <arg name="config" default=""/>

  <arg name="frequency" default="1.0"/>
  <arg name="base_frame" default="/base_footprint"/>
  <arg name="map_frame"  default="/map"/>

  <!-- Pal Navigation SM SMACH -->
  <node pkg ="pal_navigation_sm"
        type="pal_navigation_main_sm.py"
        name="pal_navigation_sm"
        output="screen">
    <rosparam file="$(arg config)" command="load"/>
    <param name="state" value="$(arg state)"/>
  </node>
  
pal_navigation_main_sm.py:  
  MapsManagerService
