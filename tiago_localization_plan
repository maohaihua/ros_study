roslaunch tiago_2dnav_gazebo tiago_navigation_public.launch

rosservice call /global_localization "{}"
rosrun key_teleop key_teleop.py
rosservice call /move_base/clear_costmaps "{}"

tiago_navigation_public.launch:
  <!--deprecated argument, you should specify the parameters below-->
  <!-- They are described in tiago.urdf.xacro -->
  <arg name="robot"  default="titanium"/>
  <arg name="arm"  default="$(eval {'iron': False}.get(arg('robot'), True))"/>
  <arg name="end_effector"  default="$(eval {'iron': 'false', 'steel': 'pal-gripper', 'titanium': 'pal-hey5'}.get(arg('robot'), 'pal-gripper'))"/>
  <arg name="ft_sensor"  default="$(eval {'titanium': 'schunk-ft'}.get(arg('robot'), 'false'))"/>
  <arg name="laser_model"  default="sick-571"/>
  <arg name="camera_model"  default="orbbec-astra"/>
  <arg name="map"   default="$(env HOME)/.pal/tiago_maps/config"/>
  <arg name="rviz"     default="true"/>
  <arg name="gzclient"     default="true"/>
  <arg name="recording" default="false"/>
  <arg name="extra_gazebo_args" default=""/>
  <arg name="localization"   default="amcl"/>
  <arg name="gzpose"         default="-x 0.78 -y -11.1 -z -0.003 -R 0.0 -P 0.0 -Y 70.0"/>
  <arg name="tuck_arm"  default="true"/>

  <include file="$(find tiago_2dnav_gazebo)/launch/tiago_navigation.launch">
      <arg name="arm" value="$(arg arm)"/>
      <arg name="end_effector" value="$(arg end_effector)"/>
      <arg name="ft_sensor" value="$(arg ft_sensor)"/>
      <arg name="laser_model" value="$(arg laser_model)"/>
      <arg name="camera_model" value="$(arg camera_model)"/>
      <arg name="global_planner" value="global_planner"/>
      <arg name="local_planner"  value="trajectory"/>
      <arg name="localization"   value="$(arg localization)"/>
      <arg name="public_sim"     value="True"/>
      <arg name="gzpose"         value="$(arg gzpose)"/>
      <arg name="tuck_arm"       value="$(arg tuck_arm)"/>
      <arg name="map"            value="$(arg map)"/>
      <arg name="rviz"           value="$(arg rviz)"/>
      <arg name="gzclient"       value="$(arg gzclient)"/>
      <arg name="recording"  value="$(arg recording)"/>
      <arg name="extra_gazebo_args" value="$(arg extra_gazebo_args)"/>
    </include>
  <include file="$(find tiago_laser_sensors)/launch/rgbd_cloud_laser.launch">
    <arg name="cloud" value="/xtion/depth_registered/points"/>
  </include>

tiago_navigation.launch:
  <arg name="namespace" default="/"/>
  <arg name="robot"  default="titanium"/>
  <arg name="arm"  default="$(eval {'iron': False}.get(arg('robot'), True))"/>
  <arg name="end_effector"  default="$(eval {'iron': 'false', 'steel': 'pal-gripper', 'titanium': 'pal-hey5'}.get(arg('robot'), 'pal-gripper'))"/>
  <arg name="ft_sensor"  default="$(eval {'titanium': 'schunk-ft'}.get(arg('robot'), 'false'))"/>
  <arg name="laser_model"  default="sick-571"/>
  <arg name="camera_model"  default="orbbec-astra"/>

  <arg name="world"  default="small_office"/>
  <arg name="gzpose" default="-x 0.0 -y 0.0 -z 0.0 -R 0.0 -P 0.0 -Y 0.0"/>
  <arg name="tuck_arm"  default="true"/>

  <arg name="planner"        default="base"/>
  <arg name="global_planner" default="global_planner"/>
  <arg name="local_planner"  default="pal"/>
  <arg name="localization"   default="amcl"/>
  <arg name="map"            default="$(env HOME)/.pal/tiago_maps/configurations/$(arg world)"/>

  <arg name="rviz"     default="true"/>
  <arg name="gzclient" default="true"/>
  <arg name="recording" default="false"/>
  <arg name="extra_gazebo_args" default=""/>

  <arg name="public_sim"   default="false"/>
  <arg name="advanced_navigation"   default="false"/> <!-- Requires extra software from PAL Robotics-->

  <arg name="sim_sufix" value="_public_sim"     if="$(arg public_sim)"/>
  <arg name="sim_sufix" value=""                unless="$(arg public_sim)"/>

  <env name="PAL_HOST" value="tiago" />

  <node name="update_maps_link" pkg="pal_navigation_sm" type="base_maps_symlink.sh" args="tiago_maps"/>

  <group ns="$(arg namespace)">

    <include file="$(find tiago_gazebo)/launch/tiago_gazebo.launch">
      <arg name="world"      value="$(arg world)"/>
      <arg name="arm" value="$(arg arm)"/>
      <arg name="end_effector" value="$(arg end_effector)"/>
      <arg name="ft_sensor" value="$(arg ft_sensor)"/>
      <arg name="laser_model" value="$(arg laser_model)"/>
      <arg name="camera_model" value="$(arg camera_model)"/>
      <arg name="gzpose"     value="$(arg gzpose)"/>
      <arg name="tuck_arm"   value="$(arg tuck_arm)"/>
      <arg name="gui"        value="$(arg gzclient)"/>
      <arg name="public_sim" value="$(arg public_sim)"/>
      <arg name="recording"  value="$(arg recording)"/>
      <arg name="extra_gazebo_args" value="$(arg extra_gazebo_args)"/>
      <arg if="$(eval local_planner == 'teb')" name="use_dynamic_footprint" value="true"/>
    </include>

    <include file="$(find tiago_2dnav)/launch/navigation.launch">
      <arg name="state"          value="localization"/>
      <arg name="planner"        value="$(arg planner)"/>
      <arg name="global_planner" value="$(arg global_planner)"/>
      <arg name="local_planner"  value="$(arg local_planner)"/>
      <arg name="localization"   value="$(arg localization)"/>
      <arg name="map"            value="$(arg map)"/>
      <arg name="public_sim"     value="$(arg public_sim)"/>
      <arg name="rgbd_sensors"   value="$(arg advanced_navigation)"/>
    </include>

   <group if="$(arg advanced_navigation)">
      <node name="rviz" pkg="rviz" type="rviz" if="$(arg rviz)"
            args="-d $(find tiago_2dnav)/config/rviz/advanced_navigation.rviz"/>
  </group>
     <group unless="$(arg advanced_navigation)">
      <node name="rviz" pkg="rviz" type="rviz" if="$(arg rviz)"
            args="-d $(find tiago_2dnav)/config/rviz/navigation$(arg sim_sufix).rviz"/>
    </group>
  </group>

  <group if="$(arg public_sim)">
    <node name="relay_map" pkg="topic_tools" type="relay" args="/map /vo_map"/>
  </group>

  <group unless="$(arg public_sim)">
    <include file="$(find pal_loc_measure)/launch/pal_loc_measure.launch">
      <arg name="training" value="False"/>
    </include>
  </group>

  <group if="$(arg advanced_navigation)">
    <!-- Advanced navigation -->
    <include file="$(find pal_head_manager)/launch/tiago_head_manager.launch"/>
    <node pkg="tiago_2dnav" type="navigation_camera_mgr.py" name="navigation_camera_mgr" />
    <node pkg="pal_zoi_detector" type="zoi_detector_node" name="zoi_detector" />
    <include file="$(find pal_waypoint)/launch/pal_waypoint.launch"/>
    <include file="$(find pal_navigation_manager)/launch/poi_navigation_server.launch"/>
    <include file="$(find tiago_laser_sensors)/launch/rgbd_cloud_laser.launch">
      <arg name="cloud"  value="/xtion/depth_registered/points"/>
    </include>
    <include file="$(find pal_map_utils)/launch/map_configuration_server.launch">
      <env name="PAL_HOST" value="tiagoc"/>
    </include>
  </group>
  
 navigation.launch:
    <arg name="state" default="localization"/>

  <arg name="planner"        default="base"/>
  <arg name="global_planner" default="global_planner"/>
  <arg name="local_planner"  default="pal"/>
  <arg name="localization"   default="amcl"/>
  <arg name="mapping"        default="karto"/>
  <arg name="octomap"        default="false"/>
  <arg name="disable_vo"     default="false"/>
  <arg name="public_sim"     default="false"/>
  <arg name="rgbd_sensors"   default="false"/>
  <arg name="tf_prefix"      default=""/>
  <arg name="multiple"       default="false"/>

  <arg name="map" default="$(env HOME)/.pal/tiago_maps/config"/>

  <!-- Localization or Mapping state -->
  <node pkg="pal_navigation_sm" type="navigation.sh" name="navigation"
        args="tiago $(arg state) $(arg localization) $(arg mapping) $(arg map) $(arg octomap) $(arg multiple) $(arg tf_prefix)" output="screen"/>

  <!-- Navigation State Machine -->
  <include file="$(find tiago_2dnav)/launch/state_machine.launch">
    <arg name="state" value="$(arg state)"/>
    <arg name="public_sim" value="$(arg public_sim)"/>
    <arg if="$(arg multiple)" name="map_frame" value="/$(arg tf_prefix)/map"/>
    <arg if="$(arg multiple)" name="base_frame" value="/$(arg tf_prefix)/base_footprint"/>
  </include>

  <!-- Planning -->
  <include file="$(find tiago_2dnav)/launch/move_$(arg planner).launch">
    <arg name="global_planner" value="$(arg global_planner)"/>
    <arg name="local_planner"  value="$(arg local_planner)"/>
    <arg name="public_sim"     value="$(arg public_sim)"/>
    <arg name="rgbd_sensors"   value="$(arg rgbd_sensors)"/>
    <arg name="tf_prefix"      value="$(arg tf_prefix)"/>
    <arg name="multiple"       value="$(arg multiple)"/>
  </include>

  <!-- VO map server -->
  <group unless="$(arg public_sim)">
    <include file="$(find pal_vo_server)/launch/vo_server.launch"/>
  </group>

navigation.sh:
# Run localization/mapping
roslaunch ${ROBOT}_2dnav $STATE.launch localization:=$LOCALIZATION mapping:=$MAPPING map:=$MAP multiple:=$MULTI tf_prefix:=$TF_PREFIX
 
state_machine.launch:
  <arg name="state"  default="localization"/>

  <arg name="public_sim"   default="false"/>

  <arg name="sim_sufix" value="_public_sim"     if="$(arg public_sim)"/>
  <arg name="sim_sufix" value=""                unless="$(arg public_sim)"/>

  <arg name="config" default="$(find tiago_2dnav)/config/state_machine/state_machine$(arg sim_sufix).yaml"/>

  <arg name="base_frame" default="/base_footprint"/>
  <arg name="map_frame"  default="/map"/>

  <include file="$(find pal_navigation_sm)/launch/pal_navigation_sm.launch">
    <arg name="state"  value="$(arg state)"/>
    <arg name="config" value="$(arg config)"/>
    <arg name="base_frame" value="$(arg base_frame)"/>
    <arg name="map_frame"  value="$(arg map_frame)"/>
  </include>
  
 pal_navigation_sm.launch:
   <arg name="state"  default="localization"/> <!-- localization, mapping -->
  <arg name="config" default=""/>

  <arg name="frequency" default="1.0"/>
  <arg name="base_frame" default="/base_footprint"/>
  <arg name="map_frame"  default="/map"/>

  <!-- Pal Navigation SM SMACH -->
  <node pkg ="pal_navigation_sm"
        type="pal_navigation_main_sm.py"
        name="pal_navigation_sm"
        output="screen">
    <rosparam file="$(arg config)" command="load"/>
    <param name="state" value="$(arg state)"/>
  </node>
  
pal_navigation_main_sm.py:  
MapsManagerService 
  
localization.launch:
  <arg name="localization"  default="amcl"/>

  <arg name="map"     default="$(env HOME)/.pal/tiago_maps/config"/>
  <arg name="symlink" default="$(env HOME)/.pal/tiago_maps/config"/>
  <arg name="multiple" default="false"/>
  <arg name="tf_prefix" default=""/>

  <arg name="mapping" default=""/>

  <!-- Map -->
  <include file="$(find pal_navigation_sm)/launch/map.launch">
    <arg name="map"     value="$(arg map)"/>
    <arg name="symlink" value="$(arg symlink)"/>
    <arg name="multiple" value="$(arg multiple)"/>
    <arg name="tf_prefix" value="$(arg tf_prefix)"/>
  </include>

  <!-- Localization -->
  <include file="$(find tiago_2dnav)/launch/localization_$(arg localization).launch">
    <arg name="multiple" value="$(arg multiple)"/>
    <arg name="tf_prefix" value="$(arg tf_prefix)"/>
  </include>

map.launch:
  <arg name="map"        default=""/>
  <arg name="symlink"    default=""/>
  <arg name="multiple" default="false"/>
  <arg name="tf_prefix" default=""/>

  <arg name="octomap"    default="false"/>

  <!-- Setup map -->
  <node name="map_setup" pkg="pal_navigation_sm" type="map_setup.py">
    <param name="map" value="$(arg map)"/>
  </node>

  <!-- Run the map server -->
  <node name="map_server" pkg="map_server" type="map_server" args="$(arg map)/map.yaml"/>

map_setup.py:
MapSetup()

localization_amcl.launch:
  <arg name="scan" default="scan"/>
  <arg name="multiple" default="false"/>
  <arg name="tf_prefix" default=""/>

  <arg name="amcl_with_mapping" default="false"/>

  <node pkg="amcl" type="amcl" name="amcl" output="screen">
    <remap from="scan" to="$(arg scan)"/>

    <!-- Load the last saved pose estimate (initial pose) -->
    <rosparam if="$(arg multiple)" file="$(env HOME)/.pal/$(arg tf_prefix)_pose.yaml" command="load"/>
    <rosparam unless="$(arg multiple)" file="$(env HOME)/.pal/pose.yaml" command="load"/>

    <rosparam file="$(find tiago_2dnav)/config/localization/amcl.yaml" command="load"/>
    <param name="use_map_topic" value="$(arg amcl_with_mapping)"/>
    <param name="first_map_only" value="true"/>
    <param if="$(arg multiple)" name="odom_frame_id" value="$(arg tf_prefix)/odom"/>
    <param if="$(arg multiple)" name="base_frame_id" value="$(arg tf_prefix)/base_footprint"/>
    <param if="$(arg multiple)" name="global_frame_id" value="$(arg tf_prefix)/map"/>
  </node>
